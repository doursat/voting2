{"version":3,"sources":["getWeb3.js","App.js","serviceWorker.js","index.js"],"names":["getWeb3","Promise","resolve","reject","window","addEventListener","a","ethereum","web3","Web3","enable","console","log","provider","providers","HttpProvider","App","state","accounts","contract","isAdmin","isVoter","workflowStatus","workflowStatusString","voterRows","proposalRows","winningProposalRow","componentDidMount","eth","getAccounts","net","getId","networkId","deployedNetwork","Voting2Contract","networks","Contract","abi","address","setState","updateState","alert","error","events","allEvents","err","event","on","receipt","resetSystem","methods","send","from","startRegisteringVoters","registerVoter","addressText","value","startProposalsRegistration","registerProposal","description","descriptionText","endProposalsRegistration","startVotingSession","endVotingSession","tallyVotes","vote","proposalId","voteText","resetVotes","call","getWorkflowStatus","getWorkflowStatusString","getAddresses","addresses","i","getVoter","then","res","length","getProposalCount","n","id","getProposal","getWinningProposalId","winId","this","className","style","display","justifyContent","Card","width","Header","color","Body","ListGroup","variant","Item","Table","striped","bordered","hover","map","vr","disabled","type","checked","pr","colspan","Form","Group","controlId","Label","Control","ref","input","Button","onClick","Component","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3a797951.chunk.js","sourcesContent":["import Web3 from \"web3\";\n\nconst getWeb3 = () =>\n  new Promise((resolve, reject) => {\n    // Wait for loading completion to avoid race conditions with web3 injection timing.\n    window.addEventListener(\"load\", async () => {\n      // Modern dapp browsers...\n      if (window.ethereum) {\n        const web3 = new Web3(window.ethereum);\n        try {\n          // Request account access if needed\n          await window.ethereum.enable();\n          // Accounts now exposed\n          resolve(web3);\n        } catch (error) {\n          reject(error);\n        }\n      }\n      // Legacy dapp browsers...\n      else if (window.web3) {\n        // Use Mist/MetaMask's provider.\n        const web3 = window.web3;\n        console.log(\"Injected web3 detected.\");\n        resolve(web3);\n      }\n      // Fallback to localhost; use dev console port by default...\n      else {\n        const provider = new Web3.providers.HttpProvider(\n          \"http://127.0.0.1:7545\"\n        );\n        const web3 = new Web3(provider);\n        console.log(\"No web3 instance injected, using Local web3.\");\n        resolve(web3);\n      }\n    });\n  });\n\nexport default getWeb3;\n","import React, { Component } from \"react\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Card from 'react-bootstrap/Card';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Table from 'react-bootstrap/Table';\nimport Voting2Contract from \"./contracts/Voting2.json\";\nimport getWeb3 from \"./getWeb3\";\nimport \"./App.css\";\n\nclass App extends Component\n{\n\tstate = { web3: null, accounts: null, contract: null,\n\t\t\t  isAdmin: false, isVoter: false,\n\t\t\t  workflowStatus: 0, workflowStatusString: \"\",\n\t\t\t  voterRows: null, proposalRows: null, winningProposalRow: null };\n\n\tcomponentDidMount = async () => {\n\t\ttry {\n\t\t\tconst web3 = await getWeb3();\n\t\t\tconst accounts = await web3.eth.getAccounts();\n\t\t\tconst networkId = await web3.eth.net.getId();\n\t\t\tconst deployedNetwork = Voting2Contract.networks[networkId];\t  \n\t\t\tconst contract = new web3.eth.Contract(Voting2Contract.abi,\n\t\t\t\t\t\t\t\t\t\t\t\t   deployedNetwork && deployedNetwork.address);\n\n\t\t\tthis.setState({ web3, accounts, contract }, this.updateState);\n\t\t}\n\t\tcatch (error) {\n\t\t\talert('Failed to load web3, accounts, or contract. Check console.');\n\t\t\tconsole.error(error);\n\t\t}\n\n\t\t// listening to all events => update state and reload page\n\t\tconst { contract } = this.state;\n\t\tcontract.events.allEvents(function(err, event){ console.log(event); })\n\t\t.on('data', event => {\n\t\t\tthis.updateState();\n\t\t})\n\t\t.on('error', function(error, receipt) {\n\t\t\tconsole.log(error, receipt);\n\t\t});\n\t};\n\n    // Reset System\n    // ------------\n\n\tresetSystem = async() => {\n\t\tconst { accounts, contract } = this.state;\n\t\tawait contract.methods.resetSystem().send({ from: accounts[0] });\n\t\tthis.updateState();\n\t}\n    \n    // Voter registration phase\n    // ------------------------\n\n\tstartRegisteringVoters = async() => {\n\t\tconst { accounts, contract } = this.state;\n\t\tawait contract.methods.startRegisteringVoters().send({ from: accounts[0] });\n\t\tthis.updateState();\n\t}\n\n\tregisterVoter = async() => {\n\t\tconst { accounts, contract } = this.state;\n\t\tconst address = this.addressText.value;\n\t\tawait contract.methods.registerVoter(address).send({ from: accounts[0] });\n\t\tthis.updateState();\n\t}\n    \n    // Proposal registration phase\n    // ---------------------------\n\t\n    startProposalsRegistration = async() => {\n\t\tconst { accounts, contract } = this.state;\n\t\tawait contract.methods.startProposalsRegistration().send({ from: accounts[0] });\n\t\tthis.updateState();\n    }\n\t\n    registerProposal = async() => {\n\t\tconst { accounts, contract } = this.state;\n\t\tconst description = this.descriptionText.value;\n\t\tawait contract.methods.registerProposal(description).send({ from: accounts[0] });\n\t\tthis.updateState();\n    }\n\t\n    endProposalsRegistration = async() => {\n\t\tconst { accounts, contract } = this.state;\n\t\tawait contract.methods.endProposalsRegistration().send({ from: accounts[0] });\n\t\tthis.updateState();\n    }\n    \n    // Voting session\n    // --------------\n\t\n    startVotingSession = async() => {\n\t\tconst { accounts, contract } = this.state;\n\t\tawait contract.methods.startVotingSession().send({ from: accounts[0] });\n\t\tthis.updateState();\n    }\n\t\n    endVotingSession = async() => {\n\t\tconst { accounts, contract } = this.state;\n\t\tawait contract.methods.endVotingSession().send({ from: accounts[0] });\n\t\tthis.updateState();\n    }\n    \n    // Tally & reset votes\n\t// -------------------\n\t\n    tallyVotes = async() => {\n\t\tconst { accounts, contract } = this.state;\n\t\tawait contract.methods.tallyVotes().send({ from: accounts[0] });\n\t\tthis.updateState();\n    }\n\t\n    vote = async() => {\n\t\tconst { accounts, contract } = this.state;\n\t\tconst proposalId = this.voteText.value;\n\t\tawait contract.methods.vote(proposalId).send({ from: accounts[0] });\n\t\tthis.updateState();\n    }\n\t\n    resetVotes = async() => {\n\t\tconst { accounts, contract } = this.state;\n\t\tawait contract.methods.resetVotes().send({ from: accounts[0] });\n\t\tthis.updateState();\n    }\n    \n    // Update state & render\n    // ---------------------\n\n\tupdateState = async() => {\n\t\tconst { accounts, contract } = this.state;\n\t\t\n\t\tconst isAdmin = await contract.methods.isAdmin(accounts[0]).call();\n\t\tconst isVoter = await contract.methods.isVoter(accounts[0]).call();\n\t\t\n\t\tconst workflowStatus = await contract.methods.getWorkflowStatus().call();\n\t\tconst workflowStatusString = await contract.methods.getWorkflowStatusString().call();\n\t\t\n\t\t// prepare voters' table to display\n\t\tvar voterRows = [];\n\t\tif (isAdmin) {\n\t\t\tconst addresses = await contract.methods.getAddresses().call();\n\t\t\tfor (let i = 0; i < addresses.length; i++) {\n\t\t\t\tawait contract.methods.getVoter(addresses[i]).call().then(function(res) {\n\t\t\t\t\tvoterRows[i] = [addresses[i], res[1], res[2]];\n\t\t\t\t});\n\t\t\t}\n\t\t} else if (isVoter) {\n\t\t\tawait contract.methods.getVoter(accounts[0]).call().then(function(res) {\n\t\t\t\tvoterRows[0] = [accounts[0], res[1], res[2]];\n\t\t\t});\n\t\t}\n\t\t\t\n\t\t// prepare proposals table to display\n\t\tconst n = await contract.methods.getProposalCount().call();\n\t\tvar proposalRows = [], winningProposalRow = [];\n\t\tfor (let id = 1; id <= n; id++) {\n\t\t\tawait contract.methods.getProposal(id).call().then(function(res){\n\t\t\t\tproposalRows[id-1] = [id, res[0], res[1]];\n\t\t\t});\n\t\t}\n\t\tif (workflowStatus == 6) {\n\t\t\tconst winId = await contract.methods.getWinningProposalId().call();\n\t\t\tawait contract.methods.getProposal(winId).call().then(function(res){\n\t\t\t\twinningProposalRow = [winId, res[0], res[1]];\n\t\t\t});\n\t\t}\n\t\t\n\t\tthis.setState({ isAdmin, isVoter,\n\t\t\t\t\t\tworkflowStatus, workflowStatusString,\n\t\t\t\t\t\tvoterRows, proposalRows, winningProposalRow });\n\t};\n \n\trender() {\n\t\tconst { contract, isAdmin, isVoter,\n\t\t\t\tworkflowStatus, workflowStatusString,\n\t\t\t\tvoterRows, proposalRows, winningProposalRow } = this.state;\n\t\t\t\t\n\t\tif (!this.state.web3) {\n\t\t\treturn <div>Loading web3, accounts, and contract...</div>;\n\t\t}\n\t\treturn (\n\t\t  <div className=\"App\">\n\t\t\t{ /* --- HEADERS -------------------------------------------------- */ }\n\t\t\t<br/>\n\t\t\t<div>\n\t\t\t  <h2 className=\"text-center\">\n\t\t\t\t{ isAdmin && <>Admin Interface</> }\n\t\t\t\t{ !isAdmin && <>Voter Interface</> }\n\t\t\t  </h2>\n\t\t\t  <span className=\"text\"><i><u>Workflow Status</u>:&nbsp;\n\t\t\t\t<mark>{ workflowStatusString }</mark></i></span>\n\t\t\t</div>\n\t\t\t<br/>\n\t\t    { /* --- REGISTERED VOTER(S) -------------------------------------- */ }\n\t\t\t<div style={{ display: 'flex', justifyContent: 'left' }}>\n\t\t\t  <Card className=\"text-start\" style={{ width: '50rem' }}>\n\t\t\t\t{ isAdmin &&\n\t\t\t\t<Card.Header style={{ color: '#772EB4' }}><strong>Registered Voters</strong></Card.Header> }\n\t\t\t\t{ isVoter &&\n\t\t\t\t<Card.Header style={{ color: '#772EB4' }}><strong>Registered Voter</strong></Card.Header> }\n\t\t\t\t{ (!isAdmin && !isVoter) &&\n\t\t\t\t<Card.Header style={{ color: '#772EB4' }}><strong>Not Registered</strong></Card.Header> }\n\t\t\t\t<Card.Body>\n\t\t\t\t  <ListGroup variant=\"flush\">\n\t\t\t\t\t<ListGroup.Item>\n\t\t\t\t\t  <Table striped bordered hover>\n\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t  <tr>\n\t\t\t\t\t\t\t<td><i>address</i></td>\n\t\t\t\t\t\t\t<td><i>voted</i></td>\n\t\t\t\t\t\t\t<td><i>chosen ID</i></td>\n\t\t\t\t\t\t  </tr>\n\t\t\t\t\t\t  { voterRows !== null && voterRows.map((vr) =>\n\t\t\t\t\t\t  <tr>\n\t\t\t\t\t\t\t<td>{ vr[0] }</td>\n\t\t\t\t\t\t\t<td><input disabled=\"true\" type=\"checkbox\" checked={ (vr[1] == true) }/></td>\n\t\t\t\t\t\t\t<td>{ vr[2] }</td>\n\t\t\t\t\t\t  </tr>) }\n\t\t\t\t\t\t</tbody>\n\t\t\t\t\t  </Table>\n\t\t\t\t\t</ListGroup.Item>\n\t\t\t\t  </ListGroup>\n\t\t\t\t</Card.Body>\n\t\t\t  </Card>\n\t\t\t</div>\n\t\t    { /* --- REGISTERED PROPOSALS (admin or voter) -------------------- */ }\n\t\t\t{ (isAdmin || isVoter) &&\n\t\t\t<div style={{ display: 'flex', justifyContent: 'left' }}>\n\t\t\t  <Card className=\"text-start\" style={{ width: '50rem' }}>\n\t\t\t\t<Card.Header style={{ color: '#007ADE' }}><strong>Registered Proposals</strong></Card.Header>\n\t\t\t\t<Card.Body>\n\t\t\t\t  <ListGroup variant=\"flush\">\n\t\t\t\t\t<ListGroup.Item>\n\t\t\t\t\t  <Table striped bordered hover>\n\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t  <tr>\n\t\t\t\t\t\t\t<td><i>ID</i></td>\n\t\t\t\t\t\t\t<td><i>description</i></td>\n\t\t\t\t\t\t\t<td><i>votes</i></td>\n\t\t\t\t\t\t  </tr>\n\t\t\t\t\t\t  { proposalRows !== null && proposalRows.map((pr) =>\n\t\t\t\t\t\t  <tr>\n\t\t\t\t\t\t\t<td>{ pr[0] }</td>\n\t\t\t\t\t\t\t<td>{ pr[1] }</td>\n\t\t\t\t\t\t\t<td>{ pr[2] }</td>\n\t\t\t\t\t\t  </tr>) }\n\t\t\t\t\t\t  { (workflowStatus == 6 && winningProposalRow !== null) && <>\n\t\t\t\t\t\t  <tr><td colspan=\"3\">Winning proposal:</td></tr>\n\t\t\t\t\t\t  <tr>\n\t\t\t\t\t\t\t<td style={{ color: '#0000FF' }}>{ winningProposalRow[0] }</td>\n\t\t\t\t\t\t\t<td style={{ color: '#0000FF' }}>{ winningProposalRow[1] }</td>\n\t\t\t\t\t\t\t<td style={{ color: '#0000FF' }}>{ winningProposalRow[2] }</td>\n\t\t\t\t\t\t  </tr></> }\n\t\t\t\t\t\t</tbody>\n\t\t\t\t\t  </Table>\n\t\t\t\t\t</ListGroup.Item>\n\t\t\t\t  </ListGroup>\n\t\t\t\t</Card.Body>\n\t\t\t  </Card>\n\t\t\t</div> }\n\t\t    { /* --- REGISTRATION MANAGEMENT (admin only) --------------------- */ }\n\t\t\t{ isAdmin &&\n\t\t\t<div style={{ display: 'flex', justifyContent: 'left' }}>\n\t\t\t  <Card className=\"text-start\" style={{ width: '50rem' }}>\n\t\t\t\t<Card.Header style={{ color: '#FF8800' }}><strong>Registration Management</strong></Card.Header>\n\t\t\t\t<Card.Body>\n\t\t\t\t  <Form.Group controlId=\"formAddress\">\n\t\t\t\t\t<Form.Label>Voter's address:</Form.Label>\n\t\t\t\t\t<Form.Control type=\"text\" id=\"addressText\"\n\t\t\t\t\t\t\t\t  ref={ (input) => { this.addressText = input } }/>\n\t\t\t\t  </Form.Group>\n\t\t\t\t  <br/>\n\t\t\t\t  <Button disabled={ workflowStatus != 0 } onClick={ this.startRegisteringVoters } variant=\"secondary\" > Start Registering Voters </Button>&nbsp;\n\t\t\t\t  <Button disabled={ workflowStatus != 1 } onClick={ this.registerVoter } variant=\"primary\" > Register Voter </Button>\n\t\t\t\t  <br/><br/>\n\t\t\t\t  <Button disabled={ workflowStatus != 1 } onClick={ this.startProposalsRegistration } variant=\"secondary\" > Start Proposals Registration </Button>&nbsp;\n\t\t\t\t  <Button disabled={ workflowStatus != 2 } onClick={ this.endProposalsRegistration } variant=\"secondary\" > End Proposals Registration </Button>\n\t\t\t\t</Card.Body>\n\t\t\t  </Card>\n\t\t\t</div> }\n\t\t    { /* --- PROPOSAL REGISTRATION (voter only) ----------------------- */ }\n\t\t\t{ isVoter &&\n\t\t\t<div style={{ display: 'flex', justifyContent: 'left' }}>\n\t\t\t  <Card className=\"text-start\" style={{ width: '50rem' }}>\n\t\t\t\t<Card.Header style={{ color: '#008800' }}><strong>Proposal Registration</strong></Card.Header>\n\t\t\t\t<Card.Body>\n\t\t\t\t  <Form.Group controlId=\"formDescription\">\n\t\t\t\t\t<Form.Label>Proposal description:</Form.Label>\n\t\t\t\t\t<Form.Control type=\"text\" id=\"descriptionText\"\n\t\t\t\t\t\t\t\t  ref={ (input) => { this.descriptionText = input } }/>\n\t\t\t\t  </Form.Group>\n\t\t\t\t  <br/>\n\t\t\t\t  <Button disabled={ workflowStatus != 2 } onClick={ this.registerProposal } variant=\"primary\" > Register Proposal </Button>\n\t\t\t\t</Card.Body>\n\t\t\t  </Card>\n\t\t\t</div> }\n\t\t    { /* --- VOTING MANAGEMENT (admin only) --------------------------- */ }\n\t\t\t{ isAdmin &&\n\t\t\t<div style={{ display: 'flex', justifyContent: 'left' }}>\n\t\t\t  <Card className=\"text-start\" style={{ width: '50rem' }}>\n\t\t\t\t<Card.Header style={{ color: '#FF8800' }}><strong>Voting Management</strong></Card.Header>\n\t\t\t\t<Card.Body>\n\t\t\t\t  <Button disabled={ workflowStatus != 3 && workflowStatus != 7 } onClick={ this.startVotingSession } variant=\"secondary\" > Start Voting Session </Button>&nbsp;\n\t\t\t\t  <Button disabled={ workflowStatus != 4 } onClick={ this.endVotingSession } variant=\"secondary\" > End Voting Session </Button>\n\t\t\t\t  <br/><br/>\n\t\t\t\t  <Button disabled={ workflowStatus != 5 } onClick={ this.tallyVotes } variant=\"secondary\" > Tally Votes </Button>&nbsp;\n\t\t\t\t  <Button disabled={ workflowStatus != 6 } onClick={ this.resetVotes } variant=\"warning\" > Reset Votes </Button>&nbsp;\n\t\t\t\t  <Button onClick={ this.resetSystem } variant=\"danger\" > Reset System </Button>\n\t\t\t\t</Card.Body>\n\t\t\t  </Card>\n\t\t\t</div> }\n\t\t    { /* --- VOTING (voter only) -------------------------------------- */ }\n\t\t\t{ isVoter &&\n\t\t\t<div style={{ display: 'flex', justifyContent: 'left' }}>\n\t\t\t  <Card className=\"text-start\" style={{ width: '50rem' }}>\n\t\t\t\t<Card.Header style={{ color: '#008800' }}><strong>Voting</strong></Card.Header>\n\t\t\t\t<Card.Body>\n\t\t\t\t  <Form.Group controlId=\"formVote\">\n\t\t\t\t\t<Form.Label>Chosen Proposal ID:</Form.Label>\n\t\t\t\t\t<Form.Control type=\"text\" id=\"voteText\"\n\t\t\t\t\t\t\t\t  ref={ (input) => { this.voteText = input } }/>\n\t\t\t\t  </Form.Group>\n\t\t\t\t  <br/>\n\t\t\t\t  <Button disabled={ workflowStatus != 4 } onClick={ this.vote } variant=\"secondary\" > Vote </Button>\n\t\t\t\t</Card.Body>\n\t\t\t  </Card>\n\t\t\t</div> }\n\t\t  </div>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}